#apiVersion: apps/v1
#kind: StatefulSet
#metadata:
#  labels:
#    app.kubernetes.io/component: database-write-hashring
#    app.kubernetes.io/name: thanos-receive-route
#  name: thanos-receive-route
#  namespace: thanos
#spec:
#  replicas: 3
#  selector:
#    matchLabels:
#      app.kubernetes.io/component: database-write-hashring
#      app.kubernetes.io/name: thanos-receive-route
#  serviceName: thanos-receive-route
#  template:
#    metadata:
#      labels:
#        app.kubernetes.io/component: database-write-hashring
#        app.kubernetes.io/name: thanos-receive-route
#    spec:
#      affinity:
#        podAntiAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - podAffinityTerm:
#              labelSelector:
#                matchExpressions:
#                - key: app.kubernetes.io/name
#                  operator: In
#                  values:
#                  - thanos-receive-route
#              namespaces:
#              - thanos
#              topologyKey: kubernetes.io/hostname
#            weight: 100
#          - podAffinityTerm:
#              labelSelector:
#                matchExpressions:
#                - key: app.kubernetes.io/name
#                  operator: In
#                  values:
#                  - thanos-receive-route
#              namespaces:
#              - thanos
#              topologyKey: topology.kubernetes.io/zone
#            weight: 100
#      serviceAccountName: thanos-receive # TODO Update to it's own service account
#      containers:
#      - args:
#        - --path=/var/lib/thanos-receive-route/hashrings.json
#        - --name=thanos-receive-controller-tenants-generated
#        - --key=hashrings.json
#        - --namespace=$(NAMESPACE)
#        env:
#        - name: NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
#        image: squat/configmap-to-disk
#        name: configmap-to-disk
#        resources:
#          requests:
#            cpu: 20m
#          limits:
#            cpu: 20m
#        volumeMounts:
#        - mountPath: /var/lib/thanos-receive-route
#          name: hashring-config
#      - args:
#        - receive-route
#        - --http-address=0.0.0.0:10902
#        - --remote-write.address=0.0.0.0:19291
#        - --receive.replication-factor=3
#        - --receive.hashrings-file=/var/lib/thanos-receive-route/hashrings.json
#        - --log.level=info
#        env:
#        - name: NAME
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.name
#        - name: NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
#        - name: DEBUG
#          value: ""
#        image: quay.io/metalmatze/thanos:3845
#        imagePullPolicy: Never
#        livenessProbe:
#          failureThreshold: 8
#          httpGet:
#            path: /-/healthy
#            port: 10902
#            scheme: HTTP
#          periodSeconds: 30
#        name: thanos-receive-route
#        ports:
#        - containerPort: 10902
#          name: http
#        - containerPort: 19291
#          name: remote-write
#        readinessProbe:
#          failureThreshold: 20
#          httpGet:
#            path: /-/ready
#            port: 10902
#            scheme: HTTP
#          periodSeconds: 5
#        resources:
#          requests:
#            cpu: 500m
#          limits:
#            cpu: '1'
#        terminationMessagePolicy: FallbackToLogsOnError
#        volumeMounts:
#        - mountPath: /var/lib/thanos-receive-route
#          name: hashring-config
#      terminationGracePeriodSeconds: 900
#      volumes:
#      - emptyDir: {}
#        name: hashring-config
#  volumeClaimTemplates: null
